{"ast":null,"code":"var _jsxFileName = \"/home/ritapravo/Desktop/React_Practice/Udemy_react/expenses_tracker/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from './ExpensesChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  //console.log(props.items);\n  const [filteredYear, setFilteredYear] = useState('All');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(filteredExpenses);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    if (filteredYear === 'All') return 1;\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const deleteExpenseHandler = expense => {\n    log;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    cls: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expenses: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      items: filteredExpenses,\n      onDeleteExpense: deleteExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Expenses, \"BgAzyBhdcmGBntQgIFc2qwqdd0s=\");\n\n_c = Expenses;\nexport default Expenses;\n/*    IN PLACE OF ALPHA\n            <ExpenseItem\n                title={props.items[0].title}\n                amount={props.items[0].amount}\n                date={props.items[0].date} />\n\n            <ExpenseItem\n                title={props.items[1].title}\n                amount={props.items[1].amount}\n                date={props.items[1].date} />\n\n            <ExpenseItem\n                title={props.items[2].title}\n                amount={props.items[2].amount}\n                date={props.items[2].date} />\n\n            <ExpenseItem\n                title={props.items[3].title}\n                amount={props.items[3].amount}\n                date={props.items[3].date} />\n\n */\n// let expensesContent = <p>No Content Found</p>\n// if(filteredExpenses.length >0){\n//     expensesContent = filteredExpenses.map((expense)=>(\n//         <ExpenseItem \n//             key = {expense.id}\n//             title = {expense.title}\n//             amount = {expense.amount}\n//             date = {expense.date}\n//         />\n//     ))\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/ritapravo/Desktop/React_Practice/Udemy_react/expenses_tracker/src/components/Expenses/Expenses.js"],"names":["Card","ExpensesFilter","useState","ExpensesList","ExpensesChart","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","console","log","filteredExpenses","items","filter","expense","date","getFullYear","toString","deleteExpenseHandler"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMO,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AACH,GAHD;;AAMA,QAAMA,gBAAgB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACrD,QAAGT,YAAY,KAAG,KAAlB,EACI,OAAO,CAAP;AACJ,WAAOS,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,YAAjD;AACH,GAJwB,CAAzB;;AAMA,QAAMa,oBAAoB,GAAIJ,OAAD,IAAa;AACtCJ,IAAAA,GAAG;AACN,GAFD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,GAAG,EAAC,UAA/B;AAAA,4BACI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAEL,YADd;AAEI,MAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEI;AAAzB;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,gBAArB;AAAuC,MAAA,eAAe,EAAEO;AAAxD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCQf,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './Expenses.css'\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props) {\n    //console.log(props.items);\n    const [filteredYear, setFilteredYear] = useState('All');\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n        console.log(filteredExpenses);\n    };\n    \n\n    const filteredExpenses = props.items.filter((expense) => {\n        if(filteredYear==='All')\n            return 1;\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    const deleteExpenseHandler = (expense) => {\n        log\n    }\n    \n\n    return (\n        <Card className='expenses' cls='expenses'>\n            <ExpensesFilter\n                selected={filteredYear}\n                onChangeFilter={filterChangeHandler}\n            />\n            <ExpensesChart expenses={filteredExpenses} />\n            <ExpensesList items={filteredExpenses} onDeleteExpense={deleteExpenseHandler}/>    \n            \n        </Card>\n    )\n}\n\nexport default Expenses;\n\n\n\n\n\n/*    IN PLACE OF ALPHA\n            <ExpenseItem\n                title={props.items[0].title}\n                amount={props.items[0].amount}\n                date={props.items[0].date} />\n\n            <ExpenseItem\n                title={props.items[1].title}\n                amount={props.items[1].amount}\n                date={props.items[1].date} />\n\n            <ExpenseItem\n                title={props.items[2].title}\n                amount={props.items[2].amount}\n                date={props.items[2].date} />\n\n            <ExpenseItem\n                title={props.items[3].title}\n                amount={props.items[3].amount}\n                date={props.items[3].date} />\n\n */\n\n\n    // let expensesContent = <p>No Content Found</p>\n    // if(filteredExpenses.length >0){\n    //     expensesContent = filteredExpenses.map((expense)=>(\n    //         <ExpenseItem \n    //             key = {expense.id}\n    //             title = {expense.title}\n    //             amount = {expense.amount}\n    //             date = {expense.date}\n    //         />\n    //     ))\n    // }"]},"metadata":{},"sourceType":"module"}